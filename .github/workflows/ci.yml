name: Test ansibug
on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

  release:
    types:
    - published

jobs:
  sanity:
    name: run sanity checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip
        cache-dependency-path: |
          pyproject.toml

    - name: Run sanity tests
      shell: bash
      run: |
        set -ex

        python -Im pip install tox
        python -Im tox run -f sanity

  build:
    name: build sdist and wheel
    needs:
    - sanity

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: build sdist and wheel
      run: |
        set -ex

        python -m pip install build
        python -m build

    - uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: ./dist/*

  test:
    name: test
    needs:
      - build

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        ansible-version:
        - "2.16"
        - "2.17"
        - "2.18"
        - "2.19"
        - devel
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

        exclude:
        # Exclude Python/Ansible versions that aren't compatible.
        - ansible-version: "2.16"
          python-version: "3.13"
        - ansible-version: "2.17"
          python-version: "3.13"
        - ansible-version: "2.18"
          python-version: "3.10"
        - ansible-version: "2.19"
          python-version: "3.10"
        - ansible-version: devel
          python-version: "3.10"
        - ansible-version: devel
          python-version: "3.11"
        # Limit macOS tests to the latest release only (2.19 only)
        - os: macos-latest
          ansible-version: "2.16"
        - os: macos-latest
          ansible-version: "2.17"
        - os: macos-latest
          ansible-version: "2.18"
        - os: macos-latest
          ansible-version: devel

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml

      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./dist

      - name: Calculate env vars
        shell: bash
        run: |
          set -ex
          OS=$( echo '${{ matrix.os }}' | tr '-' ' ' | awk '{print $1}' )
          echo "OS=${OS}" >> $GITHUB_ENV

          TOX_PYTHON=py$( echo '${{ matrix.python-version }}' | tr -d . )
          echo "TOX_PYTHON=${TOX_PYTHON}" >> $GITHUB_ENV

      - name: Test
        shell: bash
        run: |
          set -ex

          python -Im pip install tox
          python -Im tox run \
              -f ${{ env.TOX_PYTHON }} ansible_${{ matrix.ansible-version }} \
              --installpkg dist/*.whl
        env:
          PYTEST_ADDOPTS: --color=yes --junitxml junit/test-results.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Results (${{ matrix.os }} ${{ matrix.python-version }} ansible_${{ matrix.ansible-version }})
          path: ./junit/test-results.xml

      - name: Upload Coverage Results
        if: always() && !startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Results (${{ matrix.os }} ${{ matrix.python-version }} ansible_${{ matrix.ansible-version }})
          path: ./coverage.xml

      - name: Upload Coverage to codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: ${{ env.OS }},py${{ matrix.python-version }},ansible_${{ matrix.ansible-version }}
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: publish
    needs:
    - test
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: artifact
        path: ./dist

    - name: Publish
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
